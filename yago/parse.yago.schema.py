# qcl

import sys
import rdflib
import projizz

def main(inputFile):
    fp = open(inputFile,'r')

    yagoRelations = projizz.buildYagoProperties({})

    c = []
    j = 0
    for line in fp:
        if line[0] == "#" or line[0] == "@" or line[0] == "\n":
            continue
        #if line[0:29] != "<http://dbpedia.org/resource/":
        #    continue

        prefix = "@prefix dbp: <http://dbpedia.org/ontology/> .\n@prefix owl: <http://www.w3.org/2002/07/owl#> .\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\n@prefix skos: <http://www.w3.org/2004/02/skos/core#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> ."

        g = rdflib.Graph()
        r = g.parse(data=prefix+line,format="n3")
        for instance in r:
            if not "rdf-schema#" in instance[1] or not instance[0][42:] in yagoRelations:
                continue
            
            j += 1

            yagoRelation    = "%s" % (instance[0][42:])
            relaProperty    = "%s" % (instance[1][37:])
            if "wl#Thin" in "%s" % (instance[2]):
                content         = "wl:Thin"
            else:
                content         = "%s" % (instance[2][42:])

            if not "domain" in relaProperty and not "range" in relaProperty:
                continue

            yagoRelations[yagoRelation][relaProperty] = content

    print "Read",j,"lines. Finished."
    yagoRelations["produced"]["domain"] = ""
    yagoRelations["produced"]["range"] = ""
    for prop in yagoRelations:
        print prop,yagoRelations[prop]["domain"],yagoRelations[prop]["range"]

    f = open("../projizz/yagoRelation.py","w")
    f.write("# -*- coding: utf-8 -*-\n# qcl, automatically generated by ../yago/parse.yago.schema.py\n# the domain and range of each yago relation used in projizz\n")
    f.write("yagoDomainRange = %s\n" % (yagoRelations))

if __name__ == '__main__':
    main("../../../YAGO/yagoSchema.ttl")
